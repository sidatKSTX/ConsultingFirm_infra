# rdsInstance.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS PostgreSQL instance in private subnet with VPC endpoint configuration'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where RDS instance will be created

  VpcCidrBlock:
    Type: String
    Description: CIDR block of the VPC (e.g., 10.0.0.0/16)

  PrivateSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Private subnet ID for RDS deployment

  VpcEndpointSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Existing VPC Endpoint Security Group ID

  EnvironmentName:
    Type: String
    Description: Environment name (e.g., dev, staging, prod)
    AllowedValues: ['dev', 'staging', 'prod']

  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    Description: Database instance class
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large

  DBName:
    Type: String
    Description: Database name
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBUsername:
    Type: String
    Description: Database admin username
    NoEcho: true
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBPassword:
    Type: String
    Description: Database admin password
    NoEcho: true
    MinLength: 8
    MaxLength: 41

  DBAllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 1000
    Description: Allocated storage size in GB

Resources:
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS PostgreSQL
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref VpcEndpointSecurityGroupId
          Description: Allow PostgreSQL access from VPC Endpoint
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref VpcCidrBlock
          Description: Allow outbound PostgreSQL traffic within VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-rds-sg

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds: 
        - !Ref PrivateSubnetId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-db-subnet-group

  RDSInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub ${EnvironmentName}-postgres
      Engine: postgres
      EngineVersion: '14.7'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      DBName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      PubliclyAccessible: false
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      BackupRetentionPeriod: 1
      EnablePerformanceInsights: true
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName

  VPCEndpointSGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref VpcEndpointSecurityGroupId
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref DBSecurityGroup
      Description: Allow PostgreSQL access to RDS

Outputs:
  RDSEndpoint:
    Description: RDS instance endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-RDSEndpoint

  RDSPort:
    Description: RDS instance port
    Value: !GetAtt RDSInstance.Endpoint.Port
    Export:
      Name: !Sub ${AWS::StackName}-RDSPort

  DBSecurityGroupId:
    Description: Security Group ID for RDS
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-DBSecurityGroupId
